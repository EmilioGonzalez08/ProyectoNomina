// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema_Nomina_Web.Models.dbModels;

#nullable disable

namespace Sistema_Nomina_Web.Migrations
{
    [DbContext(typeof(DB_NominaContext))]
    [Migration("20241108180036_periodicidadPeriodoNominal")]
    partial class periodicidadPeriodoNominal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Periodicidad", b =>
                {
                    b.Property<int>("PeriodicidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicidadId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PeriodicidadId");

                    b.ToTable("Periodicidad");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.Incidencium", b =>
                {
                    b.Property<int>("IncidenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidenciaId"), 1L, 1);

                    b.Property<int?>("Faltas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<decimal?>("HorasExtra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PeriodoNominaId")
                        .HasColumnType("int");

                    b.Property<int?>("TrabajadorId")
                        .HasColumnType("int");

                    b.HasKey("IncidenciaId")
                        .HasName("PK__Incidenc__E41133E6CD3D6597");

                    b.HasIndex("PeriodoNominaId");

                    b.HasIndex("TrabajadorId");

                    b.ToTable("Incidencia");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.Nomina", b =>
                {
                    b.Property<int>("NominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NominaId"), 1L, 1);

                    b.Property<decimal?>("DescuentoFaltas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Faltas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("FechaCalculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("HorasExtra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("ImporteHorasExtra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Imss")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("IMSS")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Isr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("ISR")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OtrasDeducciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PeriodoNominaId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalarioNeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("TotalDeducciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("TotalPercepciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("TrabajadorId")
                        .HasColumnType("int");

                    b.HasKey("NominaId");

                    b.HasIndex("PeriodoNominaId");

                    b.HasIndex("TrabajadorId");

                    b.ToTable("Nomina");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.PeriodoNomina", b =>
                {
                    b.Property<int>("PeriodoNominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodoNominaId"), 1L, 1);

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('Abierto')");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<int?>("PeriodicidadId")
                        .HasColumnType("int");

                    b.HasKey("PeriodoNominaId");

                    b.HasIndex("PeriodicidadId");

                    b.ToTable("PeriodoNomina");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.TipoJornadum", b =>
                {
                    b.Property<int>("TipoJornadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoJornadaId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("HorasJornada")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("TipoJornadaId")
                        .HasName("PK__TipoJorn__D5BB589C60E848B1");

                    b.ToTable("TipoJornada");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.TipoSalario", b =>
                {
                    b.Property<int>("TipoSalarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoSalarioId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Periodicidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("TipoSalarioId");

                    b.ToTable("TipoSalario");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.Trabajador", b =>
                {
                    b.Property<int>("TrabajadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrabajadorId"), 1L, 1);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Curp")
                        .IsRequired()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("CURP");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nss")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("NSS");

                    b.Property<int?>("PeriodicidadId")
                        .HasColumnType("int");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("RFC");

                    b.Property<decimal>("SalarioBase")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("TipoJornadaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoSalarioId")
                        .HasColumnType("int");

                    b.HasKey("TrabajadorId");

                    b.HasIndex("PeriodicidadId");

                    b.HasIndex("TipoJornadaId");

                    b.HasIndex("TipoSalarioId");

                    b.ToTable("Trabajador");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.Incidencium", b =>
                {
                    b.HasOne("Sistema_Nomina_Web.Models.dbModels.PeriodoNomina", "PeriodoNomina")
                        .WithMany("Incidencia")
                        .HasForeignKey("PeriodoNominaId")
                        .HasConstraintName("FK__Incidenci__Perio__571DF1D5");

                    b.HasOne("Sistema_Nomina_Web.Models.dbModels.Trabajador", "Trabajador")
                        .WithMany("Incidencia")
                        .HasForeignKey("TrabajadorId")
                        .HasConstraintName("FK__Incidenci__Traba__5629CD9C");

                    b.Navigation("PeriodoNomina");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.Nomina", b =>
                {
                    b.HasOne("Sistema_Nomina_Web.Models.dbModels.PeriodoNomina", "PeriodoNomina")
                        .WithMany("Nominas")
                        .HasForeignKey("PeriodoNominaId")
                        .HasConstraintName("FK__Nomina__PeriodoN__5CD6CB2B");

                    b.HasOne("Sistema_Nomina_Web.Models.dbModels.Trabajador", "Trabajador")
                        .WithMany("Nominas")
                        .HasForeignKey("TrabajadorId")
                        .HasConstraintName("FK__Nomina__Trabajad__5BE2A6F2");

                    b.Navigation("PeriodoNomina");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.PeriodoNomina", b =>
                {
                    b.HasOne("Periodicidad", "Periodicidad")
                        .WithMany("PeriodoNominas")
                        .HasForeignKey("PeriodicidadId")
                        .HasConstraintName("FK_PeriodoNomina_Periodicidad");

                    b.Navigation("Periodicidad");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.Trabajador", b =>
                {
                    b.HasOne("Periodicidad", "Periodicidad")
                        .WithMany()
                        .HasForeignKey("PeriodicidadId")
                        .HasConstraintName("FK_Trabajador_Periodicidad");

                    b.HasOne("Sistema_Nomina_Web.Models.dbModels.TipoJornadum", "TipoJornada")
                        .WithMany("Trabajadors")
                        .HasForeignKey("TipoJornadaId")
                        .HasConstraintName("FK__Trabajado__TipoJ__4D94879B");

                    b.HasOne("Sistema_Nomina_Web.Models.dbModels.TipoSalario", "TipoSalario")
                        .WithMany("Trabajadors")
                        .HasForeignKey("TipoSalarioId")
                        .HasConstraintName("FK__Trabajado__TipoS__4E88ABD4");

                    b.Navigation("Periodicidad");

                    b.Navigation("TipoJornada");

                    b.Navigation("TipoSalario");
                });

            modelBuilder.Entity("Periodicidad", b =>
                {
                    b.Navigation("PeriodoNominas");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.PeriodoNomina", b =>
                {
                    b.Navigation("Incidencia");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.TipoJornadum", b =>
                {
                    b.Navigation("Trabajadors");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.TipoSalario", b =>
                {
                    b.Navigation("Trabajadors");
                });

            modelBuilder.Entity("Sistema_Nomina_Web.Models.dbModels.Trabajador", b =>
                {
                    b.Navigation("Incidencia");

                    b.Navigation("Nominas");
                });
#pragma warning restore 612, 618
        }
    }
}
